{"name":"Cloud Commander","tagline":"cloud file manager with console and editor","body":"Cloud Commander v0.4.0 [![NPM version][NPMIMGURL]][NPMURL] [![Dependency Status][DependencyStatusIMGURL]][DependencyStatusURL] [![Build Status][BuildStatusIMGURL]][BuildStatusURL]\r\n===============\r\n###[Main][MainURL] [Blog][BlogURL] [Demo][DemoURL]\r\n[![Flattr][FlattrIMGURL]][FlattrURL]\r\n[NPMIMGURL]:                https://badge.fury.io/js/cloudcmd.png\r\n[BuildStatusIMGURL]:        https://secure.travis-ci.org/coderaiser/cloudcmd.png?branch=master\r\n[DependencyStatusIMGURL]:   https://gemnasium.com/coderaiser/cloudcmd.png\r\n[FlattrIMGURL]:             http://api.flattr.com/button/flattr-badge-large.png\r\n[NPM_INFO_IMG]:             https://nodei.co/npm/cloudcmd.png?downloads=true&&stars\r\n[NPMURL]:                   http://badge.fury.io/js/cloudcmd\r\n[BuildStatusURL]:           http://travis-ci.org/coderaiser/cloudcmd  \"Build Status\"\r\n[DependencyStatusURL]:      https://gemnasium.com/coderaiser/cloudcmd \"Dependency Status\"\r\n[FlattrURL]:                https://flattr.com/submit/auto?user_id=coderaiser&url=github.com/coderaiser/cloudcmd&title=cloudcmd&language=&tags=github&category=software \"flattr\"\r\n[NPM_INFO_URL]:             https://npmjs.org/package/cloudcmd \"npm\"\r\n[MainURL]:                  http://cloudcmd.io \"Main\"\r\n[BlogURL]:                  http://blog.cloudcmd.io \"Blog\"\r\n[DemoURL]:                  http://io.cloudcmd.io \"Demo\"\r\n\r\n**Cloud Commander** - cloud file manager with console and editor.\r\n\r\n![Cloud Commander](/img/logo/cloudcmd.png \"Cloud Commander\")\r\n\r\nBenefits\r\n---------------\r\n- full browser compatibility *(ie6+,chrome,safari,opera,firefox)*;\r\n- responsible design\r\n- one full page loading, *and then just one-time json-dir-listings loading\r\n(with refresh opportunity).*\r\n- caching read directories *to localStorage (for now)\r\n(so if network will disconnected or something happens with a signal, we\r\ndefinitely will can work with cached copy of directory listings)*;\r\n- key binding\r\n- disabled js support *(working in limited mode)*.\r\n- automated minification *client js-files and onstart-reading Cloud manager files on server starting.*\r\n\r\n**Cloud Commander** uses all benefits of js, so if js is disabled,\r\nwe go to *limited mode*.\r\n\r\nLimited-mode features\r\n---------------\r\n- no keybinding\r\n- no local caching\r\n- full loading of all web page(with styles, js-scripts, html-page etc).\r\n\r\nHot keys\r\n---------------\r\nIn all modern web browsers (but not in IE, becouse he special) hot keys works.\r\nThere is a short list:\r\n- **F1**                - help\r\n- **F2**                - rename current file\r\n- **F3**                - view\r\n- **F4**                - edit\r\n- **F5**                - copy\r\n- **F6**                - rename/move\r\n- **F7**                - new dir\r\n- **F8, Delete**        - remove current file\r\n- **F9**                - menu\r\n- **Ctrl + r**          - reload dir content\r\n- **Ctrl + d**          - clear local cache (wich contains dir contents)\r\n- **Alt  + q**          - disable key bindings\r\n- **Alt  + s**          - get all key bindings back\r\n- **Ctrl + a**          - select all files in a panel\r\n- **up, down, enter**   - filesystem navigation\r\n- **Tab**               - move via panels\r\n- **Page Up**           - up on one page\r\n- **Page Down**         - down on one page\r\n- **Home**              - to begin of list\r\n- **End**               - to end of list\r\n- **Shift + Delete**    - remove without prompt\r\n- **Insert**            - select current file\r\n- **Shift + F10**       - context menu\r\n- **~**                 - console\r\n\r\nEdit\r\n---------------\r\n[Demo](http://io.cloudcmd.io/fs/etc#/edit/passwd \"Edit\")\r\n![Edit](/img/screenshot/edit.png \"Edit\")\r\n\r\n###Hot keys\r\n- **F4**                - open\r\n- **Ctrl + s**          - save\r\n- **Esc**               - close\r\n\r\nConsole\r\n---------------\r\n[Demo](http://io.cloudcmd.io#/console \"Console\")\r\n![Console](/img/screenshot/console.png \"Console\")\r\n\r\n###Hot keys\r\n- **~**                 - open\r\n- **Esc**               - close\r\n\r\nMenu\r\n---------------\r\n[Demo](http://io.cloudcmd.io#/menu \"Menu\")\r\n![Menu](/img/screenshot/menu.png \"Menu\")\r\nRight mouse click button shows context menu with items:\r\n- View\r\n- Edit\r\n- Rename\r\n- Delete\r\n- Zip file\r\n- Upload to (Dropbox, Github, GDrive)\r\n- Download\r\n- New (File, Dir, from cloud)\r\n\r\n###Hot keys\r\n- **F9**                - open\r\n- **Esc**               - close\r\n\r\nMenu\r\n---------------\r\nRight mouse click button shows context menu with items:\r\n- View\r\n- Edit\r\n- Rename\r\n- Delete\r\n- Upload to (Dropbox, Github, GDrive)\r\n- Download\r\n- New (File, Dir, from cloud)\r\n\r\nInstall\r\n---------------\r\n[![NPM_INFO][NPM_INFO_IMG]][NPM_INFO_URL]\r\n\r\nInstalling **Cloud Commander** is very simple.\r\nAll you need is \r\n- install [node.js](http://nodejs.org/ \"node.js\")\r\n- [download](https://github.com/coderaiser/cloudcmd/archive/master.zip)\r\nand unpack or just clone repository from github:\r\n\r\n```\r\n    git clone git://github.com/coderaiser/cloudcmd.git\r\n    cd cloudcmd\r\n    node cloudcmd\r\n```\r\nor install in npm:\r\n```\r\n    npm i cloudcmd -g\r\n    cloudcmd\r\n```\r\n\r\nConfiguration\r\n---------------\r\nAll main configuration could be done via config.json.\r\n```js\r\n{\r\n    \"api_url\"           :\"/api/v1\",\r\n    \"appcache\"          : false,    /* cache files for offline use              */\r\n    \"analytics\"         : true,     /* google analytics suport                  */\r\n    \"localStorage\"      : true,     /* cache directory data                     */\r\n    \"minification\" : {              /* minification of js,css,html and img      */\r\n        \"js\"    : false,            /* minify module needed                     */\r\n        \"css\"   : false,            /* npm i minify                             */\r\n        \"html\"  : true,\r\n        \"img\"   : false\r\n    },\r\n    \"cache\"             : true,\r\n    \"logs\"              : false,     /* logs or console ouput                    */\r\n    \"show_keys_panel\"   : true,      /* show classic panel with buttons of keys  */\r\n    \"server\"            : true,      /* server mode or testing mode              */\r\n    \"socket\"            : true       /* enable web sockets                       */\r\n    \"port\"              : 8000,      /* http port or null(default)               */\r\n    \"sslPort\"           : 443,       /* https port or null(default)              */\r\n    \"ip\"                : null,      /* ip or null(default)                      */\r\n    \"ssl\"               : false      /* should use https?                        */\r\n    \"rest\"              : true       /* enable rest interface                    */\r\n}\r\n```\r\n\r\nServer\r\n---------------\r\nStandard practices say no non-root process gets to talk to\r\nthe Internet on a port less than 1024. Anyway I suggest you\r\nto start Cloud Commander as non-root. How it could be solved?\r\nThere is a couple easy and fast ways. One of them is port forwarding.\r\n###Iptables\r\nJust run [shell/addtables.sh](shell/addtables.sh) for default options.\r\n```sh\r\n@:/tmp/cloudcmd (dev) $ sudo iptables -t nat -L # look rules before\r\n@:/tmp/cloudcmd (dev) $ sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8000\r\n@:/tmp/cloudcmd (dev) $ sudo iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-ports 4430\r\n@:/tmp/cloudcmd (dev) $ sudo iptables -t nat -L # look rules after\r\n```\r\nYou should see something like this ( **8000** and **4430** should be in config as **port** and **sslPort** )\r\n\r\n    target     prot opt source               destination\r\n    REDIRECT   tcp  --  anywhere             anywhere             tcp dpt:http redir ports 8000\r\n    REDIRECT   tcp  --  anywhere             anywhere             tcp dpt:https redir ports 4430\r\n\r\nIf you would want to get things back just clear rules ( **1** and **2** it's rule numbers,\r\nin your list they could differ).\r\n\r\n```sh\r\n@:/tmp/cloudcmd (dev) $ sudo iptables -t nat -D PREROUTING 2\r\n@:/tmp/cloudcmd (dev) $ sudo iptables -t nat -D PREROUTING 1\r\n```\r\n\r\n###nginx\r\nGet [nginx](http://nginx.org/ \"nginx\"). On linux it could be done like that\r\n```sh\r\nsudo apt-get install nginx #for ubuntu and debian\r\n```\r\nThan make host file **/etc/nginx/sites-enabled/io.cloudcmd.io**\r\n( *io.cloudcmd.io* is your domain name) with content:\r\n```sh\r\nserver {\r\n    listen 80;\r\n    server_name io.cloudcmd.io;\r\n    access_log /var/log/nginx/io.cloudcmd.io.access.log;\r\n    location / {\r\n        proxy_pass    http://127.0.0.1:8000/;\r\n    }\r\n}\r\n```\r\n```sh\r\n# create symlink of this file\r\nln -s ./sites-enabled/io.cloudcmd.io ./sites-available\r\n# restart nginx\r\n/etc/init.d/nginx restart\r\n```\r\n\r\nTo run Cloud Commander as daemon in linux you could set **log** to true in config and\r\ndo something like this:\r\n    \r\n    nohup node cloudcmd\r\n\r\nAuthorization\r\n---------------\r\nCloud Commander could authorize clients on GitHub via openID.\r\nAll things that should be done is must be added **id** and **secret** of application\r\nfrom github settings page and added to [modules.json](json/modules.json) (id just) and env variable (secret)\r\nwith names: *github_id*, *github_secret*, *dropbox_key*, *dropbox_secret* etc in\r\n[secret.bat](shell/secret.bat) *(on win32)* or [secret.sh](shell/secret.sh) *(on nix)*.\r\n\r\n\r\nStart\r\n---------------\r\nTo start **Cloud Commander** only one command needed:\r\n    \r\n    node cloudcmd\r\nor on win platform just\r\n\r\n    cloudcmd\r\nAfter that Cloud Commander reads port information from config file [config.json](json/config.json#L17) and start server\r\non this port ( **8000** by default ), if none of port varibles ( *cloud9*, *cloudfoundry* and *nodester* ) isn't exist.\r\nThen type in browser\r\n\r\n    http://127.0.0.1:8000\r\nor\r\n\r\n    http://localhost:8000\r\nUpdate\r\n---------------\r\n**Cloud Commander** is very often updates.\r\nUpdate is doing automagically but it could be done also manualy\r\nby typing a few commands in cloudcmd directory:\r\n\r\n    git pull\r\nor check new version on npm\r\n\r\n    npm info cloudcmd\r\n\r\nand then, if there is new version\r\n\r\n    npm r cloudcmd\r\n    npm i cloudcmd\r\n\r\nAdditional modules\r\n---------------\r\n**Cloud Commander's Server Side** not using additional modules for main functionality.\r\nBut for minification and optimization tricks optional can be\r\nassingned (and installed) modules: [Minify] (https://github.com/coderaiser/minify \"Minify\")\r\nand [socket.io] (https://github.com/LearnBoost/socket.io \"Socket.IO\").\r\n\r\nInstall addtitional modules (type in **Cloud Commander** directory):\r\n\r\n    npm i\r\n\r\nExtensions\r\n---------------\r\n**Cloud Commander** desinged to easily porting extensions.\r\nFor extend main functionality Cloud Commander use next modules:\r\n- [Ace]                     [AceURL]\r\n- [FancyBox]                [FancyBoxURL]\r\n- [jQuery-contextMenu]      [jQuery-contextMenuURL]\r\n- [jq-console]              [jq-consoleURL]\r\n- [github]                  [githubURL]\r\n- [dropbox-js]              [dropbox-jsURL]\r\n- [jquery]                  [jqueryURL]\r\n\r\n[AceURL]:                   //ace.ajax.org/ \"Ace\"\r\n[FancyBoxURL]:              //github.com/fancyapps/fancyBox \"FancyBox\"\r\n[jQuery-contextMenuURL]:    //github.com/medialize/jQuery-contextMenu \"jQuery-contextMenu\"\r\n[jq-consoleURL]:            //github.com/replit/jq-console‎ \"jq-console\"\r\n[githubURL]:                //github.com/michael/github \"github\"\r\n[dropbox-jsURL]:            //github.com/dropbox/dropbox-js \"dropbox-js\"\r\n[jqueryURL]:                //jquery.com\r\n\r\nContributing\r\n---------------\r\nIf you would like to contribute - send pull request to dev branch.\r\nGetting dev version of **Cloud Commander**:\r\n\r\n    git clone git://github.com/coderaiser/cloudcmd.git\r\n    git checkout dev\r\n\r\nIt is possible that dev version of Cloud Commander will needed dev version of Minify,\r\nso to get it you should type a couple more commands:\r\n\r\n    cd node_modules\r\n    rm -rf minify\r\n    git clone git://github.com/coderaiser/minify\r\n    git checkout dev\r\n\r\nVersion history\r\n---------------\r\n- *2013.09.27*, **[v0.4.0](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.4.0.zip)**\r\n- *2013.07.01*, **[v0.3.0](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.3.0.zip)**\r\n- *2013.04.22*, **[v0.2.0](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.2.0.zip)**\r\n- *2013.03.01*, **[v0.1.9](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.9.zip)**\r\n- *2012.12.12*, **[v0.1.8](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.8.zip)**\r\n- *2012.10.01*, **[v0.1.7](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.7.zip)**\r\n- *2012.08.24*, **[v0.1.6](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.6.zip)**\r\n- *2012.08.06*, **[v0.1.5](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.5.zip)**\r\n- *2012.07.27*, **[v0.1.4](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.4.zip)**\r\n- *2012.07.19*, **[v0.1.3](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.3.zip)**\r\n- *2012.07.14*, **[v0.1.2](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.2.zip)**\r\n- *2012.07.11*, **[v0.1.1](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.1.zip)**\r\n- *2012.00.00*, **[v0.1.0](//github.com/coderaiser/cloudcmd-archive/raw/master/cloudcmd-v0.1.0.zip)**\r\n\r\nLicense\r\n---------------\r\nMIT [license](LICENSE \"license\").\r\n\r\nSpecial Thanks\r\n---------------\r\n- [Polietilena](http://polietilena.github.io/ \"Polietilena\") for [logo](img/logo/cloudcmd.png \"logo\") and [favicon](img/favicon/favicon.png \"favicon\").\r\n- [Elec-ua](https://github.com/elec-ua) for [ru](http://ru.cloudcmd.io \"Cloud Commander in Russian\") and [ua](http://ua.cloudcmd.io \"Cloud Commander in Ukrainian\") translations.\r\n","google":"UA-33536569-1","note":"Don't delete this file! It's used internally to help with page regeneration."}